on: [push, pull_request]

name: Go
jobs:

  test:
    strategy:
      matrix:
        go-version: [1.12.x, 1.13.x]
        platform: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.platform }}
    steps:
    - name: Install Go
      uses: actions/setup-go@v1
      with:
        go-version: ${{ matrix.go-version }}
    - name: Checkout code
      uses: actions/checkout@v1
    - name: Download Go dependencies
      env:
        GOPROXY: "https://proxy.golang.org"
      run: go mod download
    - name: Test
      run: go test -count=1 ./...
    - name: Test with -short -race
      run: go test -short -race -count=1 ./...

    - name: gofmt check
      run: diff <(echo -n) <(gofmt -d .)
      if: matrix.platform == 'ubuntu-latest'

  test-linux-alpine:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v1
    - name: Test as root, without cgo, and with busybox
      run: docker run -it -v $PWD:/pwd golang:1.13-alpine3.10 sh -c 'export CGO_ENABLED=0; cd /pwd && go test ./...'

  fuzz:
    runs-on: ubuntu-latest
    steps:
    - name: Install Go
      uses: actions/setup-go@v1
      with:
        go-version: 1.13.x
    - name: Checkout code
      uses: actions/checkout@v1

    - name: fuzz regression tests
      run: cd _fuzz/it && ./fuzz-ci local-regression 2>&1 | grep -vE '^Running|^Executed'
    - name: fuzz continuous job
      run: export PATH="$PATH:$(go env GOPATH)/bin"; cd _fuzz/it && ./fuzz-ci fuzzing
      if: github.event_name == 'push' && github.ref == 'refs/heads/master'
      env:
        FUZZIT_API_KEY: ${{ secrets.FUZZIT_API_KEY }}
